-- ========= TABLAS DE PRODUCTOS Y CATEGORÍAS =========

-- 1. Tabla para las categorías de productos
CREATE TABLE public.categories (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name TEXT NOT NULL UNIQUE,
  created_at TIMESTAMPTZ DEFAULT NOW()
);
COMMENT ON TABLE public.categories IS 'Almacena las categorías de los productos.';

-- 2. Tabla para los productos
CREATE TABLE public.products (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name TEXT NOT NULL,
  description TEXT,
  price NUMERIC(10, 2) NOT NULL DEFAULT 0,
  stock INT NOT NULL DEFAULT 0,
  image_url TEXT,
  category_id BIGINT REFERENCES public.categories(id) ON DELETE SET NULL,
  subcategory TEXT,
  expiry_date DATE,
  created_at TIMESTAMPTZ DEFAULT NOW()
);
COMMENT ON TABLE public.products IS 'Almacena los productos de la tienda.';

-- ========= TABLA DE PERFILES DE USUARIO =========

-- 3. Tabla para perfiles de usuario (administradores)
CREATE TABLE public.profiles (
  id UUID PRIMARY KEY REFERENCES auth.users(id) ON DELETE CASCADE,
  full_name TEXT,
  email TEXT UNIQUE,
  -- Puedes agregar un campo de rol para mayor seguridad en el futuro
  -- role TEXT DEFAULT 'admin'
  updated_at TIMESTAMPTZ DEFAULT NOW()
);
COMMENT ON TABLE public.profiles IS 'Almacena datos adicionales de los usuarios administradores.';

-- ========= TABLAS DE CITAS Y FACTURACIÓN =========

-- 4. Tabla para las citas
CREATE TABLE public.appointments (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  appointment_date DATE NOT NULL,
  appointment_time TIME NOT NULL,
  client_name TEXT NOT NULL,
  pet_name TEXT,
  service_type TEXT,
  contact TEXT,
  pet_species TEXT,
  pet_age TEXT,
  recommendations TEXT,
  created_at TIMESTAMPTZ DEFAULT NOW()
);
COMMENT ON TABLE public.appointments IS 'Almacena las citas agendadas.';

-- 5. Tabla para las facturas
CREATE TABLE public.invoices (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  invoice_number TEXT NOT NULL UNIQUE,
  buyer_name TEXT NOT NULL,
  payment_method TEXT,
  subtotal NUMERIC(10, 2) NOT NULL,
  total_discount NUMERIC(10, 2) DEFAULT 0,
  final_total NUMERIC(10, 2) NOT NULL,
  created_at TIMESTAMPTZ DEFAULT NOW()
);
COMMENT ON TABLE public.invoices IS 'Almacena el historial de facturas generadas.';

-- 6. Tabla para los ítems de cada factura
CREATE TABLE public.invoice_items (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  invoice_id BIGINT NOT NULL REFERENCES public.invoices(id) ON DELETE CASCADE,
  product_id BIGINT REFERENCES public.products(id) ON DELETE SET NULL,
  product_name TEXT NOT NULL,
  quantity INT NOT NULL,
  unit_price NUMERIC(10, 2) NOT NULL,
  discount_percentage NUMERIC(5, 2) DEFAULT 0,
  subtotal NUMERIC(10, 2) NOT NULL
);
COMMENT ON TABLE public.invoice_items IS 'Detalle de los productos en cada factura.';


-- ========= TABLAS DE PEDIDOS =========

-- 7. Tabla para los pedidos (orders)
CREATE TABLE public.orders (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  customer_name TEXT NOT NULL,
  customer_email TEXT,
  customer_phone TEXT,
  customer_address TEXT,
  order_number TEXT,
  total_amount NUMERIC(10, 2) NOT NULL DEFAULT 0,
  status TEXT NOT NULL DEFAULT 'pending',
  created_at TIMESTAMPTZ DEFAULT NOW()
);
COMMENT ON TABLE public.orders IS 'Almacena los pedidos generados desde el frontend público.';

-- 8. Tabla para los ítems de cada pedido (order_items)
CREATE TABLE public.order_items (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  order_id BIGINT NOT NULL REFERENCES public.orders(id) ON DELETE CASCADE,
  product_id BIGINT REFERENCES public.products(id) ON DELETE SET NULL,
  product_name TEXT NOT NULL,
  quantity INT NOT NULL,
  unit_price NUMERIC(10, 2) NOT NULL,
  subtotal NUMERIC(10, 2) NOT NULL
);
COMMENT ON TABLE public.order_items IS 'Detalle de los productos en cada pedido.';


-- ========= CONFIGURACIÓN DEL STORAGE =========

-- 9. Crear el bucket para las imágenes de productos
-- Asegúrate de que este bucket sea público para que las imágenes se puedan ver en la web.
INSERT INTO storage.buckets (id, name, public)
VALUES ('product-images', 'product-images', true)
ON CONFLICT (id) DO NOTHING;

-- 10. Crear el bucket para las imágenes de servicios
INSERT INTO storage.buckets (id, name, public)
VALUES ('service-images', 'service-images', true)
ON CONFLICT (id) DO NOTHING;

-- Comentario: Estos buckets almacenan las imágenes de los productos y servicios


-- ========= TABLAS DE SERVICIOS Y CONTACTO =========

-- 9. Tabla para los servicios
CREATE TABLE public.services (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name TEXT NOT NULL,
  description TEXT,
  price NUMERIC(10, 2) NOT NULL DEFAULT 0,
  duration TEXT,
  image_url TEXT,
  is_active BOOLEAN DEFAULT true,
  created_at TIMESTAMPTZ DEFAULT NOW()
);
COMMENT ON TABLE public.services IS 'Almacena los servicios ofrecidos por el negocio.';

-- 10. Tabla para información de contacto
CREATE TABLE public.contact_info (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  business_name TEXT NOT NULL,
  address TEXT,
  phone TEXT,
  email TEXT,
  whatsapp TEXT,
  facebook TEXT,
  instagram TEXT,
  business_hours TEXT,
  description TEXT,
  updated_at TIMESTAMPTZ DEFAULT NOW()
);
COMMENT ON TABLE public.contact_info IS 'Almacena la información de contacto del negocio.';

-- Insertar datos iniciales para contacto (un solo registro que se actualiza)
INSERT INTO contact_info (business_name, description) 
VALUES ('Mi Negocio', 'Descripción de mi negocio')
ON CONFLICT DO NOTHING;